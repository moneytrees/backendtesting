process.env.NODE_ENV = 'test';

let mongoose = require("mongoose");
let Book = require('../app/models/book');

let chai = require('chai');
let chaiHttp = require('chai-http');
let server = require('../server');
let should = chai.should();

chai.use(chaiHttp);


    describe(".env should render id and keys", () => {
        it("should render PLAID_CLIENT_ID", (done) => {
            chai.request(server)
                .get(".env")
                .end((err, res) => {
                    res.body.should.be.a("PLAID_CLIENT_ID=5b3421efd37462001232bd1d");
                    done();
                });
        });
    });

    // check network tab open and view results 

    // test our post route when adding something that is missing a property- we should get error 

    // describe("/POST book", () => {
    //     it("it should NOT post a book without pages field", (done) => {
    //         let book = {
    //             title: "Title of Book Here",
    //             author: "Some Cool Auth",
    //             yearz: 2009
    //         }
    //         chai.request(server)
    //             .post("/book")
    //             .send(book)
    //             .end((err, res) => {
    //                 res.should.have.status(200);
    //                 res.body.should.be.a("object");
    //                 // err
    //                 res.body.errors.should.have.property("pages");
    //                 res.body.errors.pages.should.have.property("kind").eql("required");
    //                 done();
    //             });
    //     });

    // });
