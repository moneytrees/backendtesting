
// const should = require('should');
// const request = require('supertest');
// const app = require('../../../server');
// app.listen(7000, function () {
//     console.log("Starting tests... ");
// });

// describe('controllers', function() {

//   describe('plaidController', function() {

//     describe('GET /api/get_access_token', function() {

//       it('should return a an access token', function(done) {

=======
const puppeteer = require('puppeteer');
const should = require('should');
const request = require('supertest');
const app = require('../../../server');
const FPORT = process.env.FPORT || 3000;
app.listen(7000, function () {
    console.log("Starting tests... ");
});

/*test('Connect to Plaid\'s Link', async () => {

    let browser = await puppeteer.launch({headless:true});
    let page = await browser.newPage();
    await page.goto(`http://localhost:${3000}/`);
    await page.waitForSelector('#link-btn');
    await page.click('#link-btn');
    await page.click('#plaid-link-iframe-1 .PrivacyInterstitialPane__actions button');
    await page.click('#plaid-link-iframe-1 .InstitutionSelectPane__institution-list li[data-institution="chase"]');
    await page.keyboard.type('#plaid-link-container #username', 'user_good', {delay: 3});
    await page.keyboard.type('#plaid-link-container #password', 'pass_good', {delay: 3});
    await page.click('#plaid-link-iframe-container .CredentialPane button[type="submit"]');
    const label = await page.$eval( '#plaid-link-iframe-container .ConnectedPane button[type="submit"]', e => e.text());
    expect(label).toBe('Continue');
    await page.click('#plaid-link-iframe-container .ConnectedPane button[type="submit"]');
});*/
/*
describe('controllers', function() {

  describe('plaidController', function() {

    describe('GET /api/get_access_token', function() {

      it('should return a an access token', function(done) {

<<<<<<< HEAD
=======
// const should = require('should');
// const request = require('supertest');
// const app = require('../../../server');
// app.listen(7000, function () {
//     console.log("Starting tests... ");
// });

// describe('controllers', function() {

//   describe('plaidController', function() {

//     describe('GET /api/get_access_token', function() {

//       it('should return a an access token', function(done) {

<<<<<<< HEAD:test/api/controllers/plaidController.js
//         request(server)
//           .post('/api/get_access_token')
//           .set('Accept', 'application/json')
//           .send({ public_token: __plaidClient.publicToken})
//           .expect('Content-Type', /json/)
//           .expect(200)
//           .end(function(err, res) {
//             should.not.exist(err);
//             should.exist(res.body.access_token);
//             should.exist(res.body.item_id);
//             res.body.should.be.an('object');
//             done();
//           });
//       });
=======
>>>>>>> e01be32d0451ed158fd89bfe2cafe2386e2795f5
=======
>>>>>>> b43ea5bdcc9332877f4434592b814eaf3b25f3f9
>>>>>>> b1c31dc68c258eea8c652cac9364ebfa9c00fa0f
        request(app)
          .post('/api/get_access_token')
          .set('Accept', 'application/json')
          .send({ public_token: __plaidClient.publicToken})
          .expect('Content-Type', /json/)
          .expect(200)
          .end(function(err, res) {
            should.not.exist(err);
            should.exist(res.body.access_token);
            should.exist(res.body.item_id);
            res.body.should.be.an('object');
            done();
          });
      });
>>>>>>> d684be5a803c499ea951886203d09497896acbfd:test/api/controllers/plaidController.js.pending

//     });

//   });

<<<<<<< HEAD
<<<<<<< HEAD
});*/
=======
// });
>>>>>>> e01be32d0451ed158fd89bfe2cafe2386e2795f5
=======
// });
=======
});*/
>>>>>>> b43ea5bdcc9332877f4434592b814eaf3b25f3f9
>>>>>>> b1c31dc68c258eea8c652cac9364ebfa9c00fa0f
